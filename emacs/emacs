(require 'package)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/"))
(package-initialize)

; general settings
(menu-bar-mode -1)

; file manager
(require 'neotree)
(global-set-key [f8] 'neotree-toggle)
(setq neo-hidden-regexp-list '("venv" "\\.pyc$" "~$" "\\.git" "__pycache__"))
(setq neo-window-position (quote right))

; powerline
(require 'powerline)
(powerline-vim-theme)

; line settings
(global-linum-mode t)
(setq linum-format " %d ")
(column-number-mode t)
(require 'fill-column-indicator)
(add-hook 'afte0r-change-major-mode-hook 'fci-mode)
(setq fci-rule-column 120)
(setq-default
  whitespace-line-column 120
  whitespace-style '(face lines-tail))
(add-hook 'prog-mode-hook #'whitespace-mode)
(toggle-truncate-lines -1)

; theme settings
(load-theme 'oceanic t)
(add-to-list 'default-frame-alist '(background-color . "#242626"))

; tags settings
;; create tags
(defun create-tags (dir-name)
  "Create tags file."
  (interactive "DDirectory: ")
  (eshell-command
    (format "find . -type f -iname \"*.py\" -not -path \"*/venv/*\" | etags -" dir-name)))
;; refresh tags
(defun er-refresh-etags (&optional extension)
  "Run etags on all peer files in current dir and reload them silently."
  (interactive)
  (shell-command (format "find . -type f -iname \"*.py\" -not -path \"*/venv/*\" | etags -" '.))
  (let ((tags-revert-without-query t))  ; don't query, revert silently
    (visit-tags-table default-directory nil)))

; cursors
(require 'multiple-cursors)
(global-set-key (kbd "C-e") 'mc/edit-lines)
(global-set-key (kbd "M-s") 'mc/mark-pop)

; buffer settings
(setq make-backup-files nil)
(setq auto-save-default nil)
(setq-default truncate-lines 1)

; default buffers
(setq inhibit-startup-screen t)
(setq-default message-log-max nil)
(kill-buffer "*Messages*")
(setq initial-scratch-message "")
(kill-buffer "*scratch*")
(add-hook 'minibuffer-exit-hook
  '(lambda ()
    (let ((buffer "*Completions*"))
      (and (get-buffer buffer)
      (kill-buffer buffer)))))

; shortcut keys
;; create window
(global-set-key (kbd "M-<up>") 'windmove-up)
(global-set-key (kbd "M-<down>") 'windmove-down)
(global-set-key (kbd "M-<left>") 'windmove-left)
(global-set-key (kbd "M-<right>") 'windmove-right)
;; window size
(global-set-key (kbd "S-C-<up>") 'shrink-window)
(global-set-key (kbd "S-C-<down>") 'enlarge-window)
(global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
(global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
;; select text
(global-set-key (kbd "C-o") 'er/expand-region)
;; goto
(global-set-key (kbd "M-d") 'dumb-jump-go)
(global-set-key (kbd "M-f") 'dumb-jump-back)
(global-set-key (kbd "M-q") 'dumb-jump-quick-look)

; git settings
(global-git-gutter-mode +1)
(global-set-key (kbd "C-x g") 'magit-status)

; fold
(load-library "hideshow")
(global-set-key (kbd "C-f") 'hs-toggle-hiding)
(add-hook 'python-mode-hook 'hs-minor-mode)

; trim spaces
(add-hook 'before-save-hook 'delete-trailing-whitespace)
(setq require-final-newline t)

;; autopair closing parenthesis insertion
(autopair-global-mode)
(diminish 'autopair-mode)
(show-paren-mode 1)

; magit
(global-set-key (kbd "C-x g") 'magit-status)

; handle copy/paste
(defun copy-to-clipboard ()
  (interactive)
  (if (region-active-p)
	(progn
	  (shell-command-on-region (region-beginning) (region-end) "xsel -i -b")
	  (message "Yanked region to clipboard!")
	  (deactivate-mark))
      (message "No region active; can't yank to clipboard!"))
  )
(defun cut-to-clipboard ()
  (interactive)
  (if (region-active-p)
	(progn
	  (shell-command-on-region (region-beginning) (region-end) "xsel -i -b")
	  (call-interactively 'clipboard-kill-region)
	  (message "Cut region to clipboard!")
	  (deactivate-mark))
      (message "No region active; can't yank to clipboard!"))
  )
(defun paste-from-clipboard ()
  (interactive)
  (insert (shell-command-to-string "xsel -o -b"))
  )
(global-set-key (kbd "M-w") 'copy-to-clipboard)
(global-set-key (kbd "C-w") 'cut-to-clipboard)
(global-set-key (kbd "C-y") 'paste-from-clipboard)
(global-set-key (kbd "C-q") 'paste-from-clipboard)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
    (docker-compose-mode dockerfile-mode rust-mode oceanic-theme exotica-theme vala-mode auto-complete dumb-jump magit fill-column-indicator git-gutter expand-region neotree))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
